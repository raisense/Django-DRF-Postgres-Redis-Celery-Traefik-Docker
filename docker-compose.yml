version: "3"

services:
  db:
    image: postgres:12.3
    env_file:
      - .env
    restart: unless-stopped
    volumes:
      - /var/lib/postgresql/data:/var/lib/postgresql/data

  redis:
    image: library/redis:5.0-alpine
    restart: unless-stopped
    volumes:
      - /var/lib/redis/data:/data

  app:
    build:
      context: .
      dockerfile: ./docker/app/Dockerfile
      args:
        USER_ID: ${UID:-1000}
        GROUP_ID: ${GID:-1000}
    image: ${APP_REPOSITORY}/${APP_IMAGE}:${APP_IMAGE_VERSION}
    env_file:
      - .env
    restart: unless-stopped
    volumes:
      - app-media:/app/media
      - app-static:/app/static
    depends_on:
      - db
      - redis

  celery-worker:
    image: ${APP_REPOSITORY}/${APP_IMAGE}:${APP_IMAGE_VERSION}
    env_file:
      - .env
    command: /bin/bash -c "celery -A app worker --app=app.celeryconf:app --loglevel ${CELERY_WORKER_LOGLEVEL} -P threads"
    restart: unless-stopped
    volumes:
      - app-media:/app/media
      - app-static:/app/static
    depends_on:
      - app

  celery-beat:
    image: ${APP_REPOSITORY}/${APP_IMAGE}:${APP_IMAGE_VERSION}
    env_file:
      - .env
    command: /bin/bash -c "celery -A app beat -s /app/celerybeat-schedule --app=app.celeryconf:app --pidfile= --loglevel ${CELERY_BEAT_LOGLEVEL}"
    restart: unless-stopped
    volumes:
      - app-media:/app/media
      - app-static:/app/static
    depends_on:
      - app

volumes:
  app-media:
  app-static:
